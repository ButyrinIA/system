type Post {
  id: ID!
  title: String!
  content: String!
  authorId: ID!
  allowComments: Boolean!
  createdAt: String!
  comments(limit: Int!, cursor: String): PaginatedComments!
}

type Comment {
  id: ID!
  postId: ID!
  parentId: ID
  authorId: ID!
  content: String!
  createdAt: String!
  replies(limit: Int!, cursor: String): PaginatedComments!
}

type PaginatedComments {
  comments: [Comment!]!
  totalCount: Int!
  nextCursor: String
}

type PaginatedPosts {
  posts: [Post!]!
  totalCount: Int!
  nextCursor: String
}

type Query {
  posts(limit: Int!, cursor: String): PaginatedPosts!
  post(id: ID!): Post
}

type Mutation {
  createPost(title: String!, content: String!, allowComments: Boolean!): Post!
  createComment(postId: ID!, parentId: ID, content: String!): Comment!
}

type Subscription {
  commentAdded(postId: ID!): Comment!
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}